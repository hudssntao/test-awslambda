name: Deploy Lambda Function

on:
  push:
    branches:
      - main
    paths:
      - "apps/lambda/**"
      - ".github/workflows/deploy.yaml"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "8.15.6"

      - name: Install Turbo and Run Prune
        run: |
          pnpm add -g turbo
          turbo prune lambda

      - name: Run Install and Build
        run: |
          cd out
          pnpm install
          pnpm build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        run: |
          cd out
          docker build --build-arg LAMBDA_DIR=firstLambda -f ../Dockerfile -t my-lambda-one .

      - name: Tag Docker Image
        run: |
          docker tag my-lambda-one:latest ${{ steps.login-ecr.outputs.registry }}/my-lambda-one:latest

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/my-lambda-one:latest

      - name: Update Lambda Functions
        run: |
          aws lambda update-function-code \
            --function-name firstLambda \
            --image-uri ${{ steps.login-ecr.outputs.registry }}/my-lambda-one:latest

      - name: Update Lambda Environment Variables
        run: |
          aws lambda update-function-configuration \
            --function-name firstLambda \
            --environment "Variables={TEST_ENV=${{ secrets.TEST_ENV}}}"
